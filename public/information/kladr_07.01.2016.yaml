# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  title: "Kladr RestAPI"
  description: "КЛАДР - классификатор адресов России"
  version: "1.0.0"
# the domain of the service
host: kladr.entirec.ru
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /api
produces:
  - application/json  
# Describe your paths here
paths:
  /region:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Данный раздел предназначен для получения общего списка одиним элементом которого может быть объект  содержащий информацию о `Республике`,`Крае`,`Области`,`Автономном Округе`,`Автономной области`.
         Т.к. максимальный объем одного ответа от сревера ограничен числом в `50` записей, введен дополнительный параметер `page` реализующий механизм пагинации.
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: page
          in: query
          description: страница
          required: false
          type: number
          format: int
          
      tags:
        - Region
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Regions'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  # This is a path endpoint. Change it.
  /region/name:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Данный раздел предназначен для получения информации по `Республике`,`Краю`,`Области`,`Автономному Округу`,`Автономной области`.
        В качестве основного параметра для поиска может быть исползованно имя `name`. Параметер `name` позволяет производить побуквенный поиск, начиная с первой буквы имени. Т.к. максимальный объем одного ответа от сревера ограничен числом в `50` записей, введен дополнительный параметер `page` реализующий механизм пагинации.В случае отсутствия одного или нескольких параметров будет показан общий список.
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: name
          in: query
          description: имя
          required: false
          type: string
          format: string
        -
          name: page
          in: query
          description: страница
          required: false
          type: number
          format: int
          
      tags:
        - Region
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Regions'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /region/number:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Данный раздел предназначен для получения информации по `Республике`,`Краю`,`Области`,`Автономному Округу`,`Автономной области`.
        В качестве основного параметра для поиска может быть использован параметер `number`.В случае отсутствия одного или нескольких параметров будет показан общий список.
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: number
          in: query
          description: номер
          required: false
          type: number
          format: int
        -
          name: page
          in: query
          description: страница
          required: false
          type: number
          format: int
          
      tags:
        - Region
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Region'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /region/id:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Данный раздел предназначен для получения информации по `Республике`,`Краю`,`Области`,`Автономному Округу`,`Автономной области`.
        В качестве основного параметра для поиска может быть использован параметер `id` региона, области и.т.д.В случае отсутствия одного или нескольких параметров будет показан общий список.
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: id
          in: query
          description: id региона, области...
          required: false
          type: number
          format: int
          
      tags:
        - Region
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Region'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /city:
   # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Данный раздел предназначен для получения общего списка один элемент которого может содержать информацию о `Городе`,`Деревне`,`Поселоке`,`Садовом некомерческом товариществе` и.т.д.
         Т.к. максимальный объем одного ответа от сревера ограничен числом в `50` записей, введен дополнительный параметер `page` реализующий механизм пагинации.
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: page
          in: query
          description: страница
          required: false
          type: number
          format: int
          
      tags:
        - City
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: '#/definitions/Cities'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'          
  /city/name:
   # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Данный раздел предназначен для получения информации по `Городу`,`Деревне`,`Поселоку`,`Садовому некомерческому товариществу` и.т.д.
        В качестве основного параметра для поиска может быть использован параметер `name` имя города. Дополнительно в качестве уточняющих параметров можно использовать `region_number` номер региона или `region_id` id региона. Параметер `name` позволяет производить побуквенный поиск, начиная с первой буквы имени. Т.к. максимальный объем одного ответа от сревера ограничен числом в `50` записей, введен дополнительный параметер `page` реализующий механизм пагинации.В случае отсутствия одного или нескольких параметров будет показан общий список.
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: name
          in: query
          description: имя города
          required: false
          type: string
        -
          name: region_id
          in: query
          description: id региона
          required: false
          type: number
          format: int
        -
          name: region_number
          in: query
          description: номер региона
          required: false
          type: number
          format: int
        -
          name: page
          in: query
          description: страница
          required: false
          type: number
          format: int
          
      tags:
        - City
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: '#/definitions/Cities'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /city/id:
   # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Данный раздел предназначен для получения информации по `Городу`,`Деревне`,`Поселоку`,`Садовому некомерческому товариществу` и.т.д.
        В качестве основного параметра для поиска может быть использован параметер `id`.В случае отсутствия одного или нескольких параметров будет показан общий список. 
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: id
          in: query
          description: id города
          required: false
          type: number
          format: int
      tags:
        - City
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: '#/definitions/City'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /street:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Данный раздел предназначен для получения общего списка улиц. Т.к. максимальный объем одного ответа от сревера ограничен числом в `50` записей, введен дополнительный параметер `page` реализующий механизм пагинации.
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: page
          in: query
          description: страница
          required: false
          type: number
          format: int
          
      tags:
        - Street
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: '#/definitions/Streets'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /street/name:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Данный раздел предназначен для получения информации по улицам. В качестве основного параметра для поиска может быть использован  параметер `name` имя улицы , а в качестве уточняющих параметров можно использовать  номер региона `region_number` или `region_id` id региона. Параметер `name` позволяет производить побуквенный поиск, начиная с первой буквы имени. Т.к. максимальный объем одного ответа от сревера ограничен числом в `50` записей, введен дополнительный параметер `page` реализующий механизм пагинации.В случае отсутствия одного или нескольких параметров будет показан общий список.
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: name
          in: query
          description: имя улицы
          required: false
          type: string
        -
          name: city_id
          in: query
          description: id города
          required: false
          type: number
          format: int
        -
          name: region_id
          in: query
          description: id региона
          required: false
          type: number
          format: int
        -
          name: region_number
          in: query
          description: номер региона
          required: false
          type: number
          format: int
        -
          name: page
          in: query
          description: страница
          required: false
          type: number
          format: int
          
      tags:
        - Street
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: '#/definitions/Streets'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'               
  /street/id:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Данный раздел предназначен для получения информации об улице. В качестве основного параметра для поиска может быть использован параметер `id`. В случае отсутствия одного или нескольких параметров будет показан общий список.
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: id
          in: query
          description: id улицы
          required: false
          type: number
          format: int
          
      tags:
        - Street
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: '#/definitions/Street'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'               
  /home:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Данный раздел предназначен для получения общего списка домов. Т.к. максимальный объем одного ответа от сревера ограничен числом в `50` записей, введен дополнительный параметер `page` реализующий механизм пагинации.
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: page
          in: query
          description: страница
          required: false
          type: number
          format: int
          
      tags:
        - Home
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: '#/definitions/Homes'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /home/name:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Данный раздел предназначен для получения информации по домам. Для осуществления поиска обязательно должен быть указан параметер `city_id` id города или `street_id` id улицы. Параметер `name` позволяет производить побуквенный поиск, т.е. поиск по наличию буквы или номера в строке. Так же для получения возможно получить результат по конктетному дому просто указав `id` дома. Т.к. максимальный объем одного ответа от сревера ограничен числом в `50` записей, введен дополнительный параметер `page` реализующий механизм пагинации. В случае отсутствия одного или нескольких параметров будет показан общий список.
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: name
          in: query
          description: имя города
          required: false
          type: string
        -
          name: city_id
          in: query
          description: id города
          required: false
          type: number
          format: int
        -
          name: street_id
          in: query
          description: id улицы
          required: false
          type: number
          format: int
        -
          name: page
          in: query
          description: страница
          required: false
          type: number
          format: int
          
      tags:
        - Home
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: '#/definitions/Homes'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'               
  /home/id:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Данный раздел предназначен для получения информации по дому. Для осуществления поиска должн быть указанн обязательный параметер `id`. В случае отсутствия одного или нескольких параметров будет показан общий список.
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: id
          in: query
          description: id дома
          required: false
          type: number
          format: int
          
      tags:
        - Home
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: '#/definitions/Home'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'               
  /socr:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Данный раздел предназнчен для получения информации по сокращениям используемым в API. Например `г` -> `Город`. Не один из параметров не являеться обязательным. Параметры `scname` и `socrname` дают возможность побуквенного поиска. В случае указания нескольких параметрой одновременно приоритет отдеется параметру стоящему выше в нижеприведенном списке (икл. `page`) В случае отсутствия одного или нескольких параметров будет показан общий список сокращений.
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: id
          in: query
          description: id сокращения
          required: false
          type: number
          format: int
        -
          name: scname
          in: query
          description: сокращение
          required: false
          type: string
        -
          name: socrname
          in: query
          description: расшифровка
          required: false
          type: string
        -
          name: page
          in: query
          description: страница
          required: false
          type: number
          format: int
          
      tags:
        - Socr
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: '#/definitions/Socr'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'               

definitions:
  Regions:
    type: object
    properties:
        time:
          type: integer
          description: Время обработки запроса, ms
          format: int
        page:
          type: integer
          description: Номер текущей страницы
          format: int
        regions:
          type: array
          items:
            type: object
            properties:
                id:
                  type: number
                  description: id региона
                  format: int
                number:
                  type: number
                  description: номер региона
                  format: int
                name:
                  type: string
                  description: имя региона
                socr:
                  type: string
                  description: сокращение
                kladr_code:
                  type: string
                  description: номер в кладр
                index:
                  type: string
                  description: индекс
                gninmb:
                  type: string
                  description: номер налоговой инспекции
                ocatd:
                  type: string
                  description: классификатор административно-территориального деления
  Region:
    type: object
    properties:
        id:
          type: number
          description: id региона
          format: int
        number:
          type: number
          description: номер региона
          format: int
        name:
          type: string
          description: имя региона
        socr:
          type: string
          description: сокращение
        kladr_code:
          type: string
          description: номер в кладр
        index:
          type: string
          description: индекс
        gninmb:
          type: string
          description: номер налоговой инспекции
        ocatd:
          type: string
          description: классификатор административно-территориального деления
  Cities:
    type: object
    properties:
        time:
          type: integer
          description: Время обработки запроса, ms
          format: int
        page:
          type: integer
          description: Номер текущей страницы
          format: int
        cities:
          type: array
          items:
            type: object
            properties:
                id:
                  type: number
                  description: id города
                  format: int
                region_id:
                  type: number
                  description: id региона
                  format: int
                region_number:
                  type: number
                  description: номер региона
                  format: int
                name:
                  type: string
                  description: имя города
                socr:
                  type: string
                  description: сокращение
                kladr_code:
                  type: string
                  description: номер в кладр
                index:
                  type: string
                  description: индекс
                gninmb:
                  type: string
                  description: номер налоговой инспекции
                ocatd:
                  type: string
                  description: классификатор административно-территориального деления
  City:
    type: object
    properties:
        id:
          type: number
          description: id города
          format: int
        region_id:
          type: number
          description: id региона
          format: int
        region_number:
          type: number
          description: номер региона
          format: int
        name:
          type: string
          description: имя города
        socr:
          type: string
          description: сокращение
        kladr_code:
          type: string
          description: номер в кладр
        index:
          type: string
          description: индекс
        gninmb:
          type: string
          description: номер налоговой инспекции
        ocatd:
          type: string
          description: классификатор административно-территориального деления
  Streets:
    type: object
    properties:
        time:
          type: integer
          description: Время обработки запроса, ms
          format: int
        page:
          type: integer
          description: Номер текущей страницы
          format: int
        streets:
          type: array
          items:
            type: object
            properties:
                id:
                  type: number
                  description: id улицы
                  format: int
                region_id:
                  type: number
                  description: id региона
                  format: int
                region_number:
                  type: number
                  description: номер региона
                  format: int
                city_id:
                  type: number
                  description: id города
                  format: int
                name:
                  type: string
                  description: имя улицы
                socr:
                  type: string
                  description: сокращение
                kladr_code:
                  type: string
                  description: номер в кладр
                index:
                  type: string
                  description: индекс
                gninmb:
                  type: string
                  description: номер налоговой инспекции
                ocatd:
                  type: string
                  description: классификатор административно-территориального деления
  Street:
    type: object
    properties:
        id:
          type: number
          description: id улицы
          format: int
        region_id:
          type: number
          description: id региона
          format: int
        region_number:
          type: number
          description: номер региона
          format: int
        city_id:
          type: number
          description: id города
          format: int
        name:
          type: string
          description: имя улицы
        socr:
          type: string
          description: сокращение
        kladr_code:
          type: string
          description: номер в кладр
        index:
          type: string
          description: индекс
        gninmb:
          type: string
          description: номер налоговой инспекции
        ocatd:
          type: string
          description: классификатор административно-территориального деления
  Homes:
    type: object
    properties:
        time:
          type: integer
          description: Время обработки запроса, ms
          format: int
        page:
          type: integer
          description: Номер текущей страницы
          format: int
        homes:
          type: array
          items:
            type: object
            properties:
                id:
                  type: number
                  description: id дома
                  format: int
                region_id:
                  type: number
                  description: id региона
                  format: int
                region_number:
                  type: number
                  description: номер региона
                  format: int
                city_id:
                  type: number
                  description: id города
                  format: int
                street_id:
                  type: number
                  description: id города
                  format: int
                name:
                  type: string
                  description: название, например (двлд6к1,двлд8)
                socr:
                  type: string
                  description: сокращение
                kladr_code:
                  type: string
                  description: номер в кладр
                index:
                  type: string
                  description: индекс
                gninmb:
                  type: string
                  description: номер налоговой инспекции
                ocatd:
                  type: string
                  description: классификатор административно-территориального деления
  Home:
    type: object
    properties:
        id:
          type: number
          description: id дома
          format: int
        region_id:
          type: number
          description: id региона
          format: int
        region_number:
          type: number
          description: номер региона
          format: int
        city_id:
          type: number
          description: id города
          format: int
        street_id:
          type: number
          description: id города
          format: int
        name:
          type: string
          description: название, например (двлд6к1,двлд8)
        socr:
          type: string
          description: сокращение
        kladr_code:
          type: string
          description: номер в кладр
        index:
          type: string
          description: индекс
        gninmb:
          type: string
          description: номер налоговой инспекции
        ocatd:
          type: string
          description: классификатор административно-территориального деления
  Socr:
    type: object
    properties:
        time:
          type: integer
          description: Время обработки запроса, ms
          format: int
        page:
          type: integer
          description: Номер текущей страницы
          format: int
        socr:
          type: array
          items:
            type: object
            properties:
                id:
                  type: number
                  description: id сокращения
                  format: int
                scname:
                  type: string
                  description: сокращение
                socrname:
                  type: string
                  description: расшифровка
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int
      message:
        type: string
      fields:
        type: string  